PwrSave: Delphi Component for Delphi 4,5,6,7
Version 1.3
Date 11 June 2004
Copyright Jan Mitrovics 2002, 2003, 2004

Send comments to: Mitrovics@web.de

This is a freeware component! Use at own risk!

COPYRIGHT:
Copyright Jan Mitrovics 2002, 2003, 2004.

DISCLAIMER:
THIS COMPONENT IS PROVIDED AS IS! THE AUTHOR WILL TAKE NO RESPONSIBILITY
FOR ANY DAMAGES RESULTING FORM THE USE OF THIS COMPONENT!
The author disclaims any and all warranties, express or implied,
ral or written, including any implied warranties of merchantability or
fitness for a particular purpose.
The author does not and cannot warrant the performance or results you may
obtain by using the software or documentation.

DISTRIBUTION:
This component maybe freely distributed under following conditions:
Charging for the component is prohibited.
Distribution must be complete with all original files unchanged.
If you add own files, clearly identify that you are providing them.

-----------------------------------------------------------------------------

Purpose:
Windows has the ability to shutdown / hibernate / standby when no user
interaction takes place for a certain time. When writing programs for
data aqcuisition, control systems or servers this might be very undesired.
This component will prevent these events and/or gives you the opportunity
to take necessary action when such events occur.
In addition this program can as well prevent shutdown / log off initiated
by the user.

Function:
This little component will catch the listed Windows messages that might
intercept program execution.
   WM_POWERBROADCAST with
     PBT_APMQUERYSUSPEND   -> OnQuerySuspend
     PBT_APMQUERYSTANDBY   -> OnQueryStandby
   WM_QUERYENDSESSION  -> OnQueryEndSession, OnQueryLogoff, OnQueryShutdown

It will fire the corresponding events, if an eventhandler has been assigned.
If no eventhandler is assigned or user interaction is not allowed by Windows,
then it will respond to the messages as defined by the properties:
   AllowSuspend, AllowStandby, AllowEndSession

In addition to this, events for the other APM messages are included.

Usage:
Drop the component on your main form.
If you do not assign any event handlers and do not change the default values,
then Windows will not shutdown / hibernate / standby (unless this is forced
by a program / driver) and the user can not log off / shutdown while the
program is running.
Use the Events and the proporties to fine tune the behaviour.
The Query events will give you a chance to e.g. display a dialog to ask the
user what to do.

If WM_QUERYENDSESSION is received, OnQueryEndSession and OnQueryLogoff or
OnQueryShutdown will fire. OnQueryLogoff/Shutdown will fire first, then
if Allow was true, OnQueryEndSession will fire.
If any of events is returned with false in their parameter Allow, then the
action (Logoff/Shutdown) is canceled.
Note: Windows is querying applications one after the other. Therefor, it may
      (and will) happen, that some application close, but your application
      prevents Windows from Logoff/Shutdown when you set Allow to false.

I have tested the component with Delphi 4, 5, 6, 7 and Windows XP pro, 2000
and 98. However, testing has not been extensive. If you experience any
problems, please let me know. (email: Mitrovics@web.de)
If you test this component in other versions of Windows / Delphi, please
send me a short report, so I can include it with the documentation.

Check the Windows SDK Help or MSDN for more information

History:

Version 1.0, 22 July 2002:
  # First official release only for Delphi 6

Version 1.1, 22 August 2002:
  # Support for Delphi 5 and Delhi 4 added
    Remarks: This was simple, just added Forms to the uses statement.

Version 1.2, 04 Ferbuary 2003:
  # Bugfix: Windows could not exit when program was running
    Remarks: wrong Message captured:
             WM_ENDSESSION changed to WM_QUERYENDSESSION
  # Support for Delphi 7 added
    Remarks: Nothing to be done, just tested.

Version 1.3, 11 June 2004:
  # Added events: OnQueryLogoff, OnQueryShutdown
